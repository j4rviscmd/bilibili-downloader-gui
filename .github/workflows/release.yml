# https://github.com/tauri-apps/tauri-action
name: 'publish'

on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # Apple Silicon (M1+)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # Intel
            args: '--target x86_64-apple-darwin'
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js (fixed)
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          # Only needed on macOS runners; adds targets for universal builds
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Cache Rust (cargo registry, git, and target)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install frontend dependencies (npm ci)
        if: ${{ hashFiles('package-lock.json') != '' }}
        run: npm ci

      - name: Install frontend dependencies (npm install)
        if: ${{ hashFiles('package-lock.json') == '' }}
        run: npm install

      - name: Build and publish with Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: v__VERSION__
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
          generateReleaseNotes: true
          # アップデータ用 JSON をリリースにアップロードするか（デフォルト true）
          includeUpdaterJson: true
          # Windows で NSIS の setup.exe を優先するか（将来 v2 では true になる可能性）
          updaterJsonPreferNsis: true
          args: ${{ matrix.args }}
